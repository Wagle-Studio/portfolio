name: Deploy to Production

permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - master

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_OWNER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ secrets.GHCR_OWNER }}/${{ secrets.GHCR_IMAGE_NAME }}
          tags: |
            type=sha
            type=raw,value=latest

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.prod
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy_prod:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - uses: actions/checkout@v4

      - run: sudo apt-get update && sudo apt-get install -y lftp openssh-client

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SFTP_PROD_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.REMOTE_HOST }}" >> ~/.ssh/known_hosts

      - name: Deploy via SFTP
        run: |
          REMOTEDIR="${{ secrets.REMOTE_PROD_PROJECT_FOLDER_PATH }}"
          lftp sftp://${{ secrets.SFTP_PROD_USERNAME }}:${{ secrets.SFTP_PROD_PWD }}@${{ secrets.REMOTE_HOST }} -e "
            set sftp:auto-confirm yes
            cd $REMOTEDIR
            put docker-compose.prod.yml -o docker-compose.yml
            put .env.example -o .env
            bye
          "

      - name: Pull and Restart
        run: |
          SSH_USER=${{ secrets.SFTP_PROD_USERNAME }}
          SSH_HOST=${{ secrets.REMOTE_HOST }}
          APP_DIR=${{ secrets.REMOTE_PROD_PROJECT_FOLDER_PATH }}
          GHCR_NAMESPACE=${{ secrets.GHCR_NAMESPACE }}
          IMAGE_TAG=${{ needs.build_and_push.outputs.image_tag }}
          CONTAINER_PREFIX=${{ secrets.REMOTE_CONTAINER_PREFIX }}
          DIST_PORT=${{ secrets.REMOTE_DIST_PORT }}

          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << EOF
            cd "$APP_DIR"
            sed -i "s#^GHCR_NAMESPACE=.*#GHCR_NAMESPACE=${GHCR_NAMESPACE}:${IMAGE_TAG}#" .env
            sed -i "s#^REMOTE_DIST_PORT=.*#REMOTE_DIST_PORT=${DIST_PORT}#" .env
            docker compose -p ${CONTAINER_PREFIX} up -d --pull always
          EOF
